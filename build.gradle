import com.redpillanalytics.aws.tasks.S3DownloadTask
import com.redpillanalytics.aws.tasks.S3UploadSyncTask

plugins {
   id "com.gradle.plugin-publish" version "0.10.1"
   id "pl.allegro.tech.build.axion-release" version "1.10.1"
   id "com.github.breadmoirai.github-release" version "2.2.8"
   id 'groovy'
   id 'java-gradle-plugin'
   id 'org.unbroken-dome.test-sets' version '2.1.1'
   id "com.github.ben-manes.versions" version "0.21.0"
   id 'com.adarshr.test-logger' version '1.6.0'
   id "com.avast.gradle.docker-compose" version "0.9.4"
   id "com.redpillanalytics.gradle-aws" version "0.1.0"
}

ext.pluginName = 'plugin-template'

scmVersion {

   tag {
      prefix = 'v'
      versionSeparator = ''
   }
   ignoreUncommittedChanges = true
}

//set Gradle version to SCM Version
allprojects {
   project.version = scmVersion.version
}

githubRelease {

   token = githubToken
   owner = 'RedPillAnalytics'
   repo = rootProject.name
   tagName = "v${version}"
   releaseAssets = fileTree(dir: buildDir, includes: ["**/*${version}*", "**/*${version}*.jar"]).toList()
}

dependencies {

   compile gradleApi()
   compile localGroovy()
   compile 'org.slf4j:slf4j-simple:+'

   // git properties dependencies
   compile "gradle.plugin.org.dvaske.gradle:git-build-info:0.9"
   compile "org.ajoberstar.grgit:grgit-gradle:3.1.1"

   testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'

   // Plugin so classes can be used
   compile "gradle.plugin.com.redpillanalytics:gradle-aws:0.1.0"
}

// Default artifact naming.
group = 'com.redpillanalytics'

repositories {
   jcenter()
   maven {
      url "https://plugins.gradle.org/m2/"
   }
}

gradlePlugin {
   plugins {
      pluginTemplate {
         id = "com.redpillanalytics.${pluginName}"
         implementationClass = 'com.redpillanalytics.plugin.TemplatePlugin'
      }
   }
}

pluginBundle {

   description = "A plugin that does a lot of boilerplate for other Red Pill Analytics plugins."
   website = "https://github.com/RedPillAnalytics/${rootProject.name}/"
   vcsUrl = "https://github.com/RedPillAnalytics/${rootProject.name}/"

   plugins {
      pluginTemplate {
         id = "com.redpillanalytics.${pluginName}"
         displayName = pluginName
         tags = ['plugin', 'template']
         version = project.version
      }
   }

   mavenCoordinates {
      groupId = group
      artifactId = pluginName
      version = project.version
   }
}

// Options for all tests
tasks.withType(Test) {
   testLogging.showStandardStreams true
   systemProperty 'projectDir', temporaryDir
}

ext.bucket = 'documentation.redpillanalytics.com'
ext.resourceBucket = 'rpa-build-resources'

task publishVersionDocs(type: S3UploadSyncTask) {

   description = 'Upload version Groovydocs to s3.'
   group = 'documentation'

   bucketName bucket
   filePath groovydoc.destinationDir.getPath()
   keyName "${pluginName}/${version}"

   dependsOn groovydoc
}

task publishLatestDocs(type: S3UploadSyncTask) {

   description = 'Upload latest Groovydocs to s3.'
   group = 'documentation'

   bucketName bucket
   filePath groovydoc.destinationDir.getPath()
   keyName "${pluginName}/latest"

   dependsOn groovydoc
}

task copyGoogleJson(type: S3DownloadTask) {
   description 'Copy Google JSON credentials file from S3.'
   group 'build'

   bucketName resourceBucket
   keyName "gradle-analytics-build-user.json"
}

task copyGradleProps(type: S3DownloadTask) {
   description 'Copy Gradle Properties file from S3.'
   group 'build'

   bucketName resourceBucket
   keyName "gradle.properties"
}

task copyBuildResources {
   description 'Copy build resource files from S3.'
   dependsOn copyGoogleJson, copyGradleProps
}



